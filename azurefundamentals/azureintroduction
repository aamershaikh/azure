1) Azure Fundamentals : AZ-900
        - Describe cloud concepts
        - Describe core azure services
        - Describe core solutions and management tools
        - Describe general and network security features
        - Describe identity , governance , privacy and compliance features
        - Describe cost management and SLA


        What is cloud computing ?
        - Ability to rent computing resources on demand.
        - delivery of computing services such as storage , databases, networking, software, analytics and intelligence over the internet.
        - helps reduce operating costs and scale as needed.

        What is computing resources?
        - Windows and Linux servers
        - Unlimited storage
        - Databases
        - Queues
        - Content Delivery network
        - Batch Processing Jobs
        - Big Data - Hadoop
        - Media services
        - Machine learning
        - Chat bots
        - Cognitive services
        etc 1000+ services


***Chapter 1 : Describe cloud concepts***

- Benefits of cloud computing
    - Cost savings - both real and accounting
    - Agility
    - availability
    - security
    - global reach
    - range of ready on demand services
    - range of tools


    * cost saving
    - total cost of ownership less - less expense on electricity, cooling etc
    - other ways to save costs - autoscaling
    - Cloud computing eliminates the capital expense of buying hardware and software and setting up and running on site data centers, server racks etc

    * global reach
    - data centers in multiple countries

    * availability/performance - (principles of reliability pillar)
    - expressed in % - 4 9s, 5 9s
    - regularly upgraded hardware for fast and efficient computing
    - availability checklist : Applications should adhere to these (NFRs, quality attributes) - known as "Principles of reliability pillar".
    In a cloud application it is necessary to define the below so as to be prepared of any downtime
                - define and test the recovery targets - via SLAs , RTO - recovery time objective, RPO - recovery point objective etc
                - Design applcations to be resistant to failures by recovering gracefully from failures
                - Ensure required capacity and services are available in targeted regions
                - plan for disaster recovery
                - Applications should meet reliability requirements
                - recover from errors
                - ensure networking and connectivity meets reliability reqiurements



    * security
    - broad set of policies and technologies that provide security for data, apps and infrastructure

    * scalability -- > known as "performance efficiency pillar" -- for long term business needs
    - ability to handle growth of users / work
    - azure provides "" Azure Autoscale"" as its scaling service
    - when using scalability you only need to predict the current average and peak times for your workload.
    - payment plan options allow you to manage this prediction.
    - You either pay per minute of per hour depending on the servce for a designated time period

    * elasticity - short tactical terms
    - ability of a system to grow and shrink based on application demand
    - usually automated - hence minimal effect on runtime.

    (difference between elasticity and scalability is that elasticity is for short term, tactical needs) while scalability is long term, strategic needs

    * agility
    - ability to change rapidly based on changes to the market or environment
    - add more capacity to production environment

    * disaster recovery
    - ability of a system to recover from failure within a period of time and how much data is lost
    - data can be mirrored at multiple redundant sites on cloud provider network
    - key points in DR to keep in mind
            - create and test a disaster recover plan on a regular basis using key failure scenarios
            - design disaster recovery strategy to run most appliation with reduced functionality
            - desin a backup strategy that is tailored to business requirements and circumstances of the application
            - automate failover (process of switching prod to backup facility) and failback (process of returning production to its original location after disaster) steps and processes
            - test and validate the failover and failback approcach successfully once/multiple times


    * capital expenditure (Capex) and Operational expenditure (OpEx) benefits - Accounting
    - Capex is money invested in assets (like computers) that return investment over time.
    - Opex is the money spent every day on operating expenses.
    - Consumption based model in Cloud computing --> customers pay according to the amount of service that they use or consume.
        - in opex model we - pay by the minute
                           - pay by the hour
                           - pay per execution
    - economies of scale
        - inverse relation between per unit fixed cost and the quantity produced
        - principle of economies at scale - the more of something you buy the cheaper it is to own and operate per unit.****
        - economies of scale
                - efficient production
                - reduction in promotion costs
                - spread risks
                - cheaper capital
                - reduction in logistic cost
                - buy in bulk




*** Catagories of cloud serves (paradigm) ****

1) Infrastructure as a service (IAAS)
    - virtual machines, networking, load balancer, firewalls
    - does not include software services like databases

2) Platform as a service (PaaS)
    - upload the code packages and have them to run without access to hardware (WebApps, AppServices etc)

3) Software as a service (SaaS)
    - eg : Dropbox, backup services, google drive, google docs, Active directory
    - Having access to products on the cloud

**** Shared responsibility model **** - Refer diagram in chapter 8

4) Serverless
    - There are still servers....you just dont ever have to deal with them.
    - even less access to server than PaaS.
    - even with PaaS you have to choose an app service plan
    - with PaaS scaling is your responsibility, in serverless, it is upto the cloud provider to autoscale
    - basically serverless means not worrying about choosing scaling
    - chances of paying 0$ if service is not used. Because we pay for execution in serverless. In appservice, we pay by the hour.
    - Azure serverless offers
        - azure functions
        - serverless kubernetes
        - SQL database serverless
        - cosmos DB serverless


****Types of cloud computing********
1) public cloud
    - azure owns the hardware on their network and infrastructure

2) private cloud
    - looks and acts like a cloud except customer owns or leases or has exclusive access to hardware . Eg ; Financial services companies prefer their own cloud.

3) Hybrid cloud
    - combination of public and private clouds, scale private infrastructure to the cloud.



***************************************************************************************************************************************************************


















