Index: azurefundamentals/azureintroduction
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>1) Azure Fundamentals : AZ-900\n        - Describe cloud concepts\n        - Describe core azure services\n        - Describe core solutions and management tools\n        - Describe general and network security features\n        - Describe identity , governance , privacy and compliance features\n        - Describe cost management and SLA\n\n\n        What is cloud computing ?\n        - Ability to rent computing resources on demand.\n        - delivery of computing services such as storage , databases, networking, software, analytics and intellignence over the internet.\n        - helps reduce operating costs and scale as needed.\n\n        What is computing resources?\n        - Windows and Linux servers\n        - Unlimited storage\n        - Databases\n        - Queues\n        - Content Delivery network\n        - Batch Processing Jobs\n        - Big Data - Hadoop\n        - Media services\n        - Machine learning\n        - Chat bots\n        - Cognitive services\n        etc 1000+ services\n\n\n***Chapter 1 : Describe cloud concepts***\n\n- Benefits of cloud computing\n    - Cost savings - both real and accounting\n    - Agility\n    - availability\n    - security\n    - global reach\n    - range of ready on demand services\n    - range of tools\n\n\n    * cost saving\n    - total cost of ownership - less expense on electricity, cooling etc\n    - other ways to save costs - autoscaling\n    - Cloud computing eliminates the capital expense of buying hardware and software and setting up and running on site data centers, server racks etc\n\n    * global reach\n    - data centers in multiple countries\n\n    * availability/performance\n    - expressed in % - 4 9s, 5 9s\n    - ergularly upgraded hardware for fast and efficient conputing\n\n    * security\n    - broad set of policies and technologies that provide security for data, apps and infrastructure\n\n    * scalability\n    - ability to handle growth of users / work\n\n    * elasticity\n    - ability of a system to grow and shrink based on application demand\n    - usually automated - hence minimal effect on runtime.\n\n    * agility\n    - ability to change rapidly based on changes to the market or environment\n    - add more capacity to production environment\n\n    * disaster recovery\n    - ability of a system to recover from failure within a period of time and how much data is lost\n    - data can be mirrored at multiple redundant sites on cloud provider network\n\n\n    * capital expenditure (Capex) and Operational expenditure (OpEx) benefits - Accounting\n    - Capex is money invested in assets (like computers) that return investment over time.\n    - Opex is the money spent every day on operating expenses.\n    - Consumption based model in Cloud computing\n        - in opex model we - pay by the minute\n                           - pay by the hour\n                           - pay per execution\n\n\n\n*** Catagories of cloud serves (paradigm) ****\n\n1) Infrastructure as a service (IAAS)\n    - virtual machines, networking, load balancer, firewalls\n    - does not include software services like databases\n\n2) Platform as a service (PaaS)\n    - upload the code packages and have them to run without access to hardware (WebApps, AppServices etc)\n\n3) Software as a service (SaaS)\n    - eg : Dropbox, backup services, google drive, google docs, Active directory\n    - Having access to products on the cloud\n\n**** Shared responsibility model **** - Refer diagram in chapter 8\n\n4) Serverless\n    - There are still servers....you just dont ever have to deal with them.\n    - even less access to server than PaaS.\n    - even with PaaS you have to choose an app service plan\n    - with PaaS scaling us your responsibility, in serverless, it is upto the cloud provider to autoscale\n    - basically serverless means not worrying about choosing scaling\n    - chances of paying 0$ if service is not used. Because we pay for execution in serverless. In appservice, we pay by the hour.\n    - Azure serverless offers\n        - azure functions\n        - serverless kubernetes\n        - SQL database serverless\n        - cosmos DB serverless\n\n\n****Types of cloud computing********\n1) public cloud\n    - azure owns the hardware on their network and infrastructure\n\n2) private cloud\n    - looks and acts like a cloud except customer owns or leases or has exclusive access to hardware . Eg ; Financial services companies prefer their own cloud.\n\n3) Hybrid cloud\n    - combination of public and private clouds, scale private infrastructure to the cloud.\n\n*** principle of economies at scale - the more of something you bit the cheaper it is to own and operate per unit.****\n\n\n\n*****Describe core azure services********\n\nSection 1 : Core azure architectural components\n\n        *) Regions - 60+ regions - not all accessible by everyone. Eg : china\n\n        *) region Pairs - backup concept\n            - each region has one other reqion whih is treated as its pair\n            - almost always in the same geography - data storage laws\n            - the data connection between region pairs is the highest speed available\n            - software rollouts are deployed to one region of a pat and the other is not touched\n            - if multiple reqions go down, one region of each pair is treated as a priority\n\n        *) Availibility zones\n            - one region has multiple AZones - each AZone has its own hardware, cooling etc.\n\n        *) Resource Groups\n            - Similar to folder strcuture\n            - Management goups\n                - subscriptions\n                    - resource groups\n                        - resources\n\n        *) Azure subscription\n            - subscription is a billing unit\n            - users have access to one or more subscriptions with different roles\n            - all resoures consumed by a subscription will be billed to the owner\n            - can be used to organize resources into completely distinct accounts\n\n        *) Management groups\n            -     we can manage governance models over a subscription using managment groups. eg : policies\n\n\n\n - Azure resource manager (ARM)\n    -  This is how azure interacts with resources behind the scenes\n    - through Portal or command line or Visual code etc\n    - anything we do happens throgh azure resource manager API.\n    Azure resources - instance of service that you create that are yours to use\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- azurefundamentals/azureintroduction	(revision 602355befdff688f30e2dfda5eb672c52a720260)
+++ azurefundamentals/azureintroduction	(date 1622348669000)
@@ -49,7 +49,7 @@
 
     * availability/performance
     - expressed in % - 4 9s, 5 9s
-    - ergularly upgraded hardware for fast and efficient conputing
+    - regularly upgraded hardware for fast and efficient computing
 
     * security
     - broad set of policies and technologies that provide security for data, apps and infrastructure
